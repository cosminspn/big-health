
/*
 * 
 */

package ro.bighealth.commons.service;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 2.1.2
 * Fri Oct 31 16:37:06 EET 2014
 * Generated source version: 2.1.2
 * 
 */


@WebServiceClient(name = "userAxisService", 
                  wsdlLocation = "file:/D:/Workspaces/MyStuff/bighealth-master/axis2/bh-axis2-loader/src/main/resources/wsdl/userService.wsdl",
                  targetNamespace = "http://service.commons.bighealth.ro") 
public class UserAxisService extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("http://service.commons.bighealth.ro", "userAxisService");
    public final static QName UserAxisServiceHttpEndpoint = new QName("http://service.commons.bighealth.ro", "userAxisServiceHttpEndpoint");
    public final static QName UserAxisServiceHttpSoap11Endpoint = new QName("http://service.commons.bighealth.ro", "userAxisServiceHttpSoap11Endpoint");
    public final static QName UserAxisServiceHttpSoap12Endpoint = new QName("http://service.commons.bighealth.ro", "userAxisServiceHttpSoap12Endpoint");
    static {
        URL url = null;
        try {
            url = new URL("file:/D:/Workspaces/MyStuff/bighealth-master/axis2/bh-axis2-loader/src/main/resources/wsdl/userService.wsdl");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from file:/D:/Workspaces/MyStuff/bighealth-master/axis2/bh-axis2-loader/src/main/resources/wsdl/userService.wsdl");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public UserAxisService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public UserAxisService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public UserAxisService() {
        super(WSDL_LOCATION, SERVICE);
    }

    /**
     * 
     * @return
     *     returns UserAxisServicePortType
     */
    @WebEndpoint(name = "userAxisServiceHttpEndpoint")
    public UserAxisServicePortType getUserAxisServiceHttpEndpoint() {
        return super.getPort(UserAxisServiceHttpEndpoint, UserAxisServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns UserAxisServicePortType
     */
    @WebEndpoint(name = "userAxisServiceHttpEndpoint")
    public UserAxisServicePortType getUserAxisServiceHttpEndpoint(WebServiceFeature... features) {
        return super.getPort(UserAxisServiceHttpEndpoint, UserAxisServicePortType.class, features);
    }
    /**
     * 
     * @return
     *     returns UserAxisServicePortType
     */
    @WebEndpoint(name = "userAxisServiceHttpSoap11Endpoint")
    public UserAxisServicePortType getUserAxisServiceHttpSoap11Endpoint() {
        return super.getPort(UserAxisServiceHttpSoap11Endpoint, UserAxisServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns UserAxisServicePortType
     */
    @WebEndpoint(name = "userAxisServiceHttpSoap11Endpoint")
    public UserAxisServicePortType getUserAxisServiceHttpSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(UserAxisServiceHttpSoap11Endpoint, UserAxisServicePortType.class, features);
    }
    /**
     * 
     * @return
     *     returns UserAxisServicePortType
     */
    @WebEndpoint(name = "userAxisServiceHttpSoap12Endpoint")
    public UserAxisServicePortType getUserAxisServiceHttpSoap12Endpoint() {
        return super.getPort(UserAxisServiceHttpSoap12Endpoint, UserAxisServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns UserAxisServicePortType
     */
    @WebEndpoint(name = "userAxisServiceHttpSoap12Endpoint")
    public UserAxisServicePortType getUserAxisServiceHttpSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(UserAxisServiceHttpSoap12Endpoint, UserAxisServicePortType.class, features);
    }

}
