package ro.bighealth.soap.service;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.0.2
 * 2014-11-04T11:41:45.328+02:00
 * Generated source version: 3.0.2
 * 
 */
@WebService(targetNamespace = "http://service.commons.bighealth.ro/", name = "UserServicePortType")
@XmlSeeAlso({ObjectFactory.class})
public interface UserServicePortType {

    @WebMethod
    @RequestWrapper(localName = "findById", targetNamespace = "http://service.commons.bighealth.ro/", className = "ro.bighealth.soap.service.FindById")
    @ResponseWrapper(localName = "findByIdResponse", targetNamespace = "http://service.commons.bighealth.ro/", className = "ro.bighealth.soap.service.FindByIdResponse")
    @WebResult(name = "return", targetNamespace = "")
    public ro.bighealth.soap.service.User findById(
        @WebParam(name = "entityId", targetNamespace = "")
        java.lang.Long entityId
    );

    @WebMethod
    @RequestWrapper(localName = "create", targetNamespace = "http://service.commons.bighealth.ro/", className = "ro.bighealth.soap.service.Create")
    @ResponseWrapper(localName = "createResponse", targetNamespace = "http://service.commons.bighealth.ro/", className = "ro.bighealth.soap.service.CreateResponse")
    @WebResult(name = "return", targetNamespace = "")
    public ro.bighealth.soap.service.User create(
        @WebParam(name = "entity", targetNamespace = "")
        ro.bighealth.soap.service.User entity
    );

    @WebMethod
    @RequestWrapper(localName = "update", targetNamespace = "http://service.commons.bighealth.ro/", className = "ro.bighealth.soap.service.Update")
    @ResponseWrapper(localName = "updateResponse", targetNamespace = "http://service.commons.bighealth.ro/", className = "ro.bighealth.soap.service.UpdateResponse")
    @WebResult(name = "return", targetNamespace = "")
    public ro.bighealth.soap.service.User update(
        @WebParam(name = "entity", targetNamespace = "")
        ro.bighealth.soap.service.User entity
    );

    @WebMethod
    @RequestWrapper(localName = "findByEmail", targetNamespace = "http://service.commons.bighealth.ro/", className = "ro.bighealth.soap.service.FindByEmail")
    @ResponseWrapper(localName = "findByEmailResponse", targetNamespace = "http://service.commons.bighealth.ro/", className = "ro.bighealth.soap.service.FindByEmailResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.util.List<ro.bighealth.soap.service.User> findByEmail(
        @WebParam(name = "email", targetNamespace = "")
        java.lang.String email
    );

    @WebMethod
    @RequestWrapper(localName = "findAll", targetNamespace = "http://service.commons.bighealth.ro/", className = "ro.bighealth.soap.service.FindAll")
    @ResponseWrapper(localName = "findAllResponse", targetNamespace = "http://service.commons.bighealth.ro/", className = "ro.bighealth.soap.service.FindAllResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.lang.Object findAll();

    @WebMethod
    @RequestWrapper(localName = "remove", targetNamespace = "http://service.commons.bighealth.ro/", className = "ro.bighealth.soap.service.Remove")
    @ResponseWrapper(localName = "removeResponse", targetNamespace = "http://service.commons.bighealth.ro/", className = "ro.bighealth.soap.service.RemoveResponse")
    public void remove(
        @WebParam(name = "entityId", targetNamespace = "")
        java.lang.Long entityId
    );
}
